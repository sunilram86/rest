buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"

jar {
    baseName = 'rest-template-reviews'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }

}


ext {
    springCloudServicesVersion = '1.4.1.RELEASE'
    springCloudVersion = 'Dalston.RELEASE'
}


sourceSets {
    assessment {
        java.srcDir file('assessment/java')
        resources.srcDir file('assessment/resources')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('com.google.code.gson:gson:2.8.0')
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard'
   compile('org.springframework.boot:spring-boot-starter-actuator')

    compile 'org.springframework.cloud:spring-cloud-starter-hystrix:1.0.2.RELEASE'
    compile 'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard:1.0.2.RELEASE'

    assessmentCompile sourceSets.main.output
    assessmentCompile configurations.testCompile
    assessmentCompile sourceSets.test.output
    assessmentRuntime configurations.testRuntime
}

dependencyManagement {
    imports {
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task assess(type: Test) {
    testClassesDir = sourceSets.assessment.output.classesDir
    classpath = sourceSets.assessment.runtimeClasspath
}

test.finalizedBy(jacocoTestReport)
jacocoTestReport.finalizedBy(jacocoTestCoverageVerification)

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}
